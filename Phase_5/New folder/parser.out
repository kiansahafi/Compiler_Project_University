Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    OP_negate

Grammar

Rule 0     S' -> statement_list
Rule 1     statement -> compound_statement
Rule 2     statement -> declaration_statement
Rule 3     statement -> selection_statement
Rule 4     statement -> iteration_statement
Rule 5     statement -> expression_statement
Rule 6     statement -> print_statement
Rule 7     statement -> SEMICOLON
Rule 8     compound_statement -> LBRACE statement_list RBRACE
Rule 9     statement_list -> statement_list statement
Rule 10    statement_list -> empty
Rule 11    declaration_statement -> type_specifier declaration_list SEMICOLON
Rule 12    type_specifier -> KEY_int
Rule 13    type_specifier -> KEY_char
Rule 14    type_specifier -> KEY_float
Rule 15    type_specifier -> KEY_string
Rule 16    declaration_list -> single_var_declation COMMA declaration_list
Rule 17    declaration_list -> single_var_declation
Rule 18    single_var_declation -> IDENTIFIER
Rule 19    single_var_declation -> IDENTIFIER OP_assign equality_expression
Rule 20    print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON
Rule 21    selection_statement -> KEY_if LPAREN expression save RPAREN statement
Rule 22    selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement
Rule 23    iteration_statement -> KEY_while label LPAREN expression save RPAREN statement
Rule 24    iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON
Rule 25    iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
Rule 26    label -> empty
Rule 27    save -> empty
Rule 28    optexpr -> assignment_expression
Rule 29    optexpr -> empty
Rule 30    expression_statement -> expression SEMICOLON
Rule 31    expression -> assignment_expression
Rule 32    expression -> expression COMMA assignment_expression
Rule 33    assignment_expression -> equality_expression
Rule 34    assignment_expression -> IDENTIFIER OP_assign equality_expression
Rule 35    equality_expression -> relational_expression
Rule 36    equality_expression -> equality_expression OP_equal relational_expression
Rule 37    equality_expression -> equality_expression OP_notequal relational_expression
Rule 38    relational_expression -> additive_expression
Rule 39    relational_expression -> relational_expression OP_greater additive_expression
Rule 40    relational_expression -> relational_expression OP_less additive_expression
Rule 41    relational_expression -> relational_expression OP_greaterequal additive_expression
Rule 42    relational_expression -> relational_expression OP_lessequal additive_expression
Rule 43    additive_expression -> multiplicative_expression
Rule 44    additive_expression -> additive_expression OP_add multiplicative_expression
Rule 45    additive_expression -> additive_expression OP_subtract multiplicative_expression
Rule 46    multiplicative_expression -> unary_expression
Rule 47    multiplicative_expression -> multiplicative_expression OP_multiply unary_expression
Rule 48    multiplicative_expression -> multiplicative_expression OP_divide unary_expression
Rule 49    multiplicative_expression -> multiplicative_expression OP_mod unary_expression
Rule 50    unary_expression -> primary_expression
Rule 51    unary_expression -> OP_subtract primary_expression
Rule 52    primary_expression -> INTEGER
Rule 53    primary_expression -> FLOAT
Rule 54    primary_expression -> CHARACTER
Rule 55    primary_expression -> STRING
Rule 56    primary_expression -> id_expression
Rule 57    id_expression -> IDENTIFIER
Rule 58    id_expression -> LPAREN expression RPAREN
Rule 59    empty -> <empty>

Terminals, with rules where they appear

CHARACTER            : 54
COMMA                : 16 32
FLOAT                : 53
IDENTIFIER           : 18 19 34 57
INTEGER              : 52
KEY_char             : 13
KEY_do               : 24
KEY_else             : 22
KEY_float            : 14
KEY_for              : 25
KEY_if               : 21 22
KEY_int              : 12
KEY_print            : 20
KEY_string           : 15
KEY_while            : 23 24
LBRACE               : 8
LPAREN               : 20 21 22 23 24 25 58
OP_add               : 44
OP_assign            : 19 34
OP_divide            : 48
OP_equal             : 36
OP_greater           : 39
OP_greaterequal      : 41
OP_less              : 40
OP_lessequal         : 42
OP_mod               : 49
OP_multiply          : 47
OP_negate            : 
OP_notequal          : 37
OP_subtract          : 45 51
RBRACE               : 8
RPAREN               : 20 21 22 23 24 25 58
SEMICOLON            : 7 11 20 24 25 25 30
STRING               : 55
error                : 

Nonterminals, with rules where they appear

additive_expression  : 38 39 40 41 42 44 45
assignment_expression : 28 31 32
compound_statement   : 1
declaration_list     : 11 16
declaration_statement : 2
empty                : 10 26 27 29
equality_expression  : 19 33 34 36 37
expression           : 20 21 22 23 24 30 32 58
expression_statement : 5
id_expression        : 56
iteration_statement  : 4
label                : 23 24 25
multiplicative_expression : 43 44 45 47 48 49
optexpr              : 25 25 25
primary_expression   : 50 51
print_statement      : 6
relational_expression : 35 36 37 39 40 41 42
save                 : 21 22 22 23 25
selection_statement  : 3
single_var_declation : 16 17
statement            : 9 21 22 22 23 24 25
statement_list       : 8 9 0
type_specifier       : 11
unary_expression     : 46 47 48 49

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (9) statement_list -> . statement_list statement
    (10) statement_list -> . empty
    (59) empty -> .

    SEMICOLON       reduce using rule 59 (empty -> .)
    LBRACE          reduce using rule 59 (empty -> .)
    KEY_if          reduce using rule 59 (empty -> .)
    KEY_while       reduce using rule 59 (empty -> .)
    KEY_do          reduce using rule 59 (empty -> .)
    KEY_for         reduce using rule 59 (empty -> .)
    KEY_print       reduce using rule 59 (empty -> .)
    KEY_int         reduce using rule 59 (empty -> .)
    KEY_char        reduce using rule 59 (empty -> .)
    KEY_float       reduce using rule 59 (empty -> .)
    KEY_string      reduce using rule 59 (empty -> .)
    IDENTIFIER      reduce using rule 59 (empty -> .)
    OP_subtract     reduce using rule 59 (empty -> .)
    INTEGER         reduce using rule 59 (empty -> .)
    FLOAT           reduce using rule 59 (empty -> .)
    CHARACTER       reduce using rule 59 (empty -> .)
    STRING          reduce using rule 59 (empty -> .)
    LPAREN          reduce using rule 59 (empty -> .)
    $end            reduce using rule 59 (empty -> .)

    statement_list                 shift and go to state 1
    empty                          shift and go to state 2

state 1

    (0) S' -> statement_list .
    (9) statement_list -> statement_list . statement
    (1) statement -> . compound_statement
    (2) statement -> . declaration_statement
    (3) statement -> . selection_statement
    (4) statement -> . iteration_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . SEMICOLON
    (8) compound_statement -> . LBRACE statement_list RBRACE
    (11) declaration_statement -> . type_specifier declaration_list SEMICOLON
    (21) selection_statement -> . KEY_if LPAREN expression save RPAREN statement
    (22) selection_statement -> . KEY_if LPAREN expression save RPAREN statement KEY_else save statement
    (23) iteration_statement -> . KEY_while label LPAREN expression save RPAREN statement
    (24) iteration_statement -> . KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON
    (25) iteration_statement -> . KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (30) expression_statement -> . expression SEMICOLON
    (20) print_statement -> . KEY_print LPAREN expression RPAREN SEMICOLON
    (12) type_specifier -> . KEY_int
    (13) type_specifier -> . KEY_char
    (14) type_specifier -> . KEY_float
    (15) type_specifier -> . KEY_string
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    SEMICOLON       shift and go to state 10
    LBRACE          shift and go to state 11
    KEY_if          shift and go to state 13
    KEY_while       shift and go to state 16
    KEY_do          shift and go to state 17
    KEY_for         shift and go to state 18
    KEY_print       shift and go to state 19
    KEY_int         shift and go to state 20
    KEY_char        shift and go to state 21
    KEY_float       shift and go to state 22
    KEY_string      shift and go to state 23
    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    statement                      shift and go to state 3
    compound_statement             shift and go to state 4
    declaration_statement          shift and go to state 5
    selection_statement            shift and go to state 6
    iteration_statement            shift and go to state 7
    expression_statement           shift and go to state 8
    print_statement                shift and go to state 9
    type_specifier                 shift and go to state 12
    expression                     shift and go to state 15
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 2

    (10) statement_list -> empty .

    SEMICOLON       reduce using rule 10 (statement_list -> empty .)
    LBRACE          reduce using rule 10 (statement_list -> empty .)
    KEY_if          reduce using rule 10 (statement_list -> empty .)
    KEY_while       reduce using rule 10 (statement_list -> empty .)
    KEY_do          reduce using rule 10 (statement_list -> empty .)
    KEY_for         reduce using rule 10 (statement_list -> empty .)
    KEY_print       reduce using rule 10 (statement_list -> empty .)
    KEY_int         reduce using rule 10 (statement_list -> empty .)
    KEY_char        reduce using rule 10 (statement_list -> empty .)
    KEY_float       reduce using rule 10 (statement_list -> empty .)
    KEY_string      reduce using rule 10 (statement_list -> empty .)
    IDENTIFIER      reduce using rule 10 (statement_list -> empty .)
    OP_subtract     reduce using rule 10 (statement_list -> empty .)
    INTEGER         reduce using rule 10 (statement_list -> empty .)
    FLOAT           reduce using rule 10 (statement_list -> empty .)
    CHARACTER       reduce using rule 10 (statement_list -> empty .)
    STRING          reduce using rule 10 (statement_list -> empty .)
    LPAREN          reduce using rule 10 (statement_list -> empty .)
    $end            reduce using rule 10 (statement_list -> empty .)
    RBRACE          reduce using rule 10 (statement_list -> empty .)


state 3

    (9) statement_list -> statement_list statement .

    SEMICOLON       reduce using rule 9 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_if          reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_while       reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_do          reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_for         reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_print       reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_int         reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_char        reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_float       reduce using rule 9 (statement_list -> statement_list statement .)
    KEY_string      reduce using rule 9 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 9 (statement_list -> statement_list statement .)
    OP_subtract     reduce using rule 9 (statement_list -> statement_list statement .)
    INTEGER         reduce using rule 9 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 9 (statement_list -> statement_list statement .)
    CHARACTER       reduce using rule 9 (statement_list -> statement_list statement .)
    STRING          reduce using rule 9 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 9 (statement_list -> statement_list statement .)
    $end            reduce using rule 9 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 9 (statement_list -> statement_list statement .)


state 4

    (1) statement -> compound_statement .

    SEMICOLON       reduce using rule 1 (statement -> compound_statement .)
    LBRACE          reduce using rule 1 (statement -> compound_statement .)
    KEY_if          reduce using rule 1 (statement -> compound_statement .)
    KEY_while       reduce using rule 1 (statement -> compound_statement .)
    KEY_do          reduce using rule 1 (statement -> compound_statement .)
    KEY_for         reduce using rule 1 (statement -> compound_statement .)
    KEY_print       reduce using rule 1 (statement -> compound_statement .)
    KEY_int         reduce using rule 1 (statement -> compound_statement .)
    KEY_char        reduce using rule 1 (statement -> compound_statement .)
    KEY_float       reduce using rule 1 (statement -> compound_statement .)
    KEY_string      reduce using rule 1 (statement -> compound_statement .)
    IDENTIFIER      reduce using rule 1 (statement -> compound_statement .)
    OP_subtract     reduce using rule 1 (statement -> compound_statement .)
    INTEGER         reduce using rule 1 (statement -> compound_statement .)
    FLOAT           reduce using rule 1 (statement -> compound_statement .)
    CHARACTER       reduce using rule 1 (statement -> compound_statement .)
    STRING          reduce using rule 1 (statement -> compound_statement .)
    LPAREN          reduce using rule 1 (statement -> compound_statement .)
    $end            reduce using rule 1 (statement -> compound_statement .)
    RBRACE          reduce using rule 1 (statement -> compound_statement .)
    KEY_else        reduce using rule 1 (statement -> compound_statement .)


state 5

    (2) statement -> declaration_statement .

    SEMICOLON       reduce using rule 2 (statement -> declaration_statement .)
    LBRACE          reduce using rule 2 (statement -> declaration_statement .)
    KEY_if          reduce using rule 2 (statement -> declaration_statement .)
    KEY_while       reduce using rule 2 (statement -> declaration_statement .)
    KEY_do          reduce using rule 2 (statement -> declaration_statement .)
    KEY_for         reduce using rule 2 (statement -> declaration_statement .)
    KEY_print       reduce using rule 2 (statement -> declaration_statement .)
    KEY_int         reduce using rule 2 (statement -> declaration_statement .)
    KEY_char        reduce using rule 2 (statement -> declaration_statement .)
    KEY_float       reduce using rule 2 (statement -> declaration_statement .)
    KEY_string      reduce using rule 2 (statement -> declaration_statement .)
    IDENTIFIER      reduce using rule 2 (statement -> declaration_statement .)
    OP_subtract     reduce using rule 2 (statement -> declaration_statement .)
    INTEGER         reduce using rule 2 (statement -> declaration_statement .)
    FLOAT           reduce using rule 2 (statement -> declaration_statement .)
    CHARACTER       reduce using rule 2 (statement -> declaration_statement .)
    STRING          reduce using rule 2 (statement -> declaration_statement .)
    LPAREN          reduce using rule 2 (statement -> declaration_statement .)
    $end            reduce using rule 2 (statement -> declaration_statement .)
    RBRACE          reduce using rule 2 (statement -> declaration_statement .)
    KEY_else        reduce using rule 2 (statement -> declaration_statement .)


state 6

    (3) statement -> selection_statement .

    SEMICOLON       reduce using rule 3 (statement -> selection_statement .)
    LBRACE          reduce using rule 3 (statement -> selection_statement .)
    KEY_if          reduce using rule 3 (statement -> selection_statement .)
    KEY_while       reduce using rule 3 (statement -> selection_statement .)
    KEY_do          reduce using rule 3 (statement -> selection_statement .)
    KEY_for         reduce using rule 3 (statement -> selection_statement .)
    KEY_print       reduce using rule 3 (statement -> selection_statement .)
    KEY_int         reduce using rule 3 (statement -> selection_statement .)
    KEY_char        reduce using rule 3 (statement -> selection_statement .)
    KEY_float       reduce using rule 3 (statement -> selection_statement .)
    KEY_string      reduce using rule 3 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 3 (statement -> selection_statement .)
    OP_subtract     reduce using rule 3 (statement -> selection_statement .)
    INTEGER         reduce using rule 3 (statement -> selection_statement .)
    FLOAT           reduce using rule 3 (statement -> selection_statement .)
    CHARACTER       reduce using rule 3 (statement -> selection_statement .)
    STRING          reduce using rule 3 (statement -> selection_statement .)
    LPAREN          reduce using rule 3 (statement -> selection_statement .)
    $end            reduce using rule 3 (statement -> selection_statement .)
    RBRACE          reduce using rule 3 (statement -> selection_statement .)
    KEY_else        reduce using rule 3 (statement -> selection_statement .)


state 7

    (4) statement -> iteration_statement .

    SEMICOLON       reduce using rule 4 (statement -> iteration_statement .)
    LBRACE          reduce using rule 4 (statement -> iteration_statement .)
    KEY_if          reduce using rule 4 (statement -> iteration_statement .)
    KEY_while       reduce using rule 4 (statement -> iteration_statement .)
    KEY_do          reduce using rule 4 (statement -> iteration_statement .)
    KEY_for         reduce using rule 4 (statement -> iteration_statement .)
    KEY_print       reduce using rule 4 (statement -> iteration_statement .)
    KEY_int         reduce using rule 4 (statement -> iteration_statement .)
    KEY_char        reduce using rule 4 (statement -> iteration_statement .)
    KEY_float       reduce using rule 4 (statement -> iteration_statement .)
    KEY_string      reduce using rule 4 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 4 (statement -> iteration_statement .)
    OP_subtract     reduce using rule 4 (statement -> iteration_statement .)
    INTEGER         reduce using rule 4 (statement -> iteration_statement .)
    FLOAT           reduce using rule 4 (statement -> iteration_statement .)
    CHARACTER       reduce using rule 4 (statement -> iteration_statement .)
    STRING          reduce using rule 4 (statement -> iteration_statement .)
    LPAREN          reduce using rule 4 (statement -> iteration_statement .)
    $end            reduce using rule 4 (statement -> iteration_statement .)
    RBRACE          reduce using rule 4 (statement -> iteration_statement .)
    KEY_else        reduce using rule 4 (statement -> iteration_statement .)


state 8

    (5) statement -> expression_statement .

    SEMICOLON       reduce using rule 5 (statement -> expression_statement .)
    LBRACE          reduce using rule 5 (statement -> expression_statement .)
    KEY_if          reduce using rule 5 (statement -> expression_statement .)
    KEY_while       reduce using rule 5 (statement -> expression_statement .)
    KEY_do          reduce using rule 5 (statement -> expression_statement .)
    KEY_for         reduce using rule 5 (statement -> expression_statement .)
    KEY_print       reduce using rule 5 (statement -> expression_statement .)
    KEY_int         reduce using rule 5 (statement -> expression_statement .)
    KEY_char        reduce using rule 5 (statement -> expression_statement .)
    KEY_float       reduce using rule 5 (statement -> expression_statement .)
    KEY_string      reduce using rule 5 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 5 (statement -> expression_statement .)
    OP_subtract     reduce using rule 5 (statement -> expression_statement .)
    INTEGER         reduce using rule 5 (statement -> expression_statement .)
    FLOAT           reduce using rule 5 (statement -> expression_statement .)
    CHARACTER       reduce using rule 5 (statement -> expression_statement .)
    STRING          reduce using rule 5 (statement -> expression_statement .)
    LPAREN          reduce using rule 5 (statement -> expression_statement .)
    $end            reduce using rule 5 (statement -> expression_statement .)
    RBRACE          reduce using rule 5 (statement -> expression_statement .)
    KEY_else        reduce using rule 5 (statement -> expression_statement .)


state 9

    (6) statement -> print_statement .

    SEMICOLON       reduce using rule 6 (statement -> print_statement .)
    LBRACE          reduce using rule 6 (statement -> print_statement .)
    KEY_if          reduce using rule 6 (statement -> print_statement .)
    KEY_while       reduce using rule 6 (statement -> print_statement .)
    KEY_do          reduce using rule 6 (statement -> print_statement .)
    KEY_for         reduce using rule 6 (statement -> print_statement .)
    KEY_print       reduce using rule 6 (statement -> print_statement .)
    KEY_int         reduce using rule 6 (statement -> print_statement .)
    KEY_char        reduce using rule 6 (statement -> print_statement .)
    KEY_float       reduce using rule 6 (statement -> print_statement .)
    KEY_string      reduce using rule 6 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> print_statement .)
    OP_subtract     reduce using rule 6 (statement -> print_statement .)
    INTEGER         reduce using rule 6 (statement -> print_statement .)
    FLOAT           reduce using rule 6 (statement -> print_statement .)
    CHARACTER       reduce using rule 6 (statement -> print_statement .)
    STRING          reduce using rule 6 (statement -> print_statement .)
    LPAREN          reduce using rule 6 (statement -> print_statement .)
    $end            reduce using rule 6 (statement -> print_statement .)
    RBRACE          reduce using rule 6 (statement -> print_statement .)
    KEY_else        reduce using rule 6 (statement -> print_statement .)


state 10

    (7) statement -> SEMICOLON .

    SEMICOLON       reduce using rule 7 (statement -> SEMICOLON .)
    LBRACE          reduce using rule 7 (statement -> SEMICOLON .)
    KEY_if          reduce using rule 7 (statement -> SEMICOLON .)
    KEY_while       reduce using rule 7 (statement -> SEMICOLON .)
    KEY_do          reduce using rule 7 (statement -> SEMICOLON .)
    KEY_for         reduce using rule 7 (statement -> SEMICOLON .)
    KEY_print       reduce using rule 7 (statement -> SEMICOLON .)
    KEY_int         reduce using rule 7 (statement -> SEMICOLON .)
    KEY_char        reduce using rule 7 (statement -> SEMICOLON .)
    KEY_float       reduce using rule 7 (statement -> SEMICOLON .)
    KEY_string      reduce using rule 7 (statement -> SEMICOLON .)
    IDENTIFIER      reduce using rule 7 (statement -> SEMICOLON .)
    OP_subtract     reduce using rule 7 (statement -> SEMICOLON .)
    INTEGER         reduce using rule 7 (statement -> SEMICOLON .)
    FLOAT           reduce using rule 7 (statement -> SEMICOLON .)
    CHARACTER       reduce using rule 7 (statement -> SEMICOLON .)
    STRING          reduce using rule 7 (statement -> SEMICOLON .)
    LPAREN          reduce using rule 7 (statement -> SEMICOLON .)
    $end            reduce using rule 7 (statement -> SEMICOLON .)
    RBRACE          reduce using rule 7 (statement -> SEMICOLON .)
    KEY_else        reduce using rule 7 (statement -> SEMICOLON .)


state 11

    (8) compound_statement -> LBRACE . statement_list RBRACE
    (9) statement_list -> . statement_list statement
    (10) statement_list -> . empty
    (59) empty -> .

    RBRACE          reduce using rule 59 (empty -> .)
    SEMICOLON       reduce using rule 59 (empty -> .)
    LBRACE          reduce using rule 59 (empty -> .)
    KEY_if          reduce using rule 59 (empty -> .)
    KEY_while       reduce using rule 59 (empty -> .)
    KEY_do          reduce using rule 59 (empty -> .)
    KEY_for         reduce using rule 59 (empty -> .)
    KEY_print       reduce using rule 59 (empty -> .)
    KEY_int         reduce using rule 59 (empty -> .)
    KEY_char        reduce using rule 59 (empty -> .)
    KEY_float       reduce using rule 59 (empty -> .)
    KEY_string      reduce using rule 59 (empty -> .)
    IDENTIFIER      reduce using rule 59 (empty -> .)
    OP_subtract     reduce using rule 59 (empty -> .)
    INTEGER         reduce using rule 59 (empty -> .)
    FLOAT           reduce using rule 59 (empty -> .)
    CHARACTER       reduce using rule 59 (empty -> .)
    STRING          reduce using rule 59 (empty -> .)
    LPAREN          reduce using rule 59 (empty -> .)

    statement_list                 shift and go to state 38
    empty                          shift and go to state 2

state 12

    (11) declaration_statement -> type_specifier . declaration_list SEMICOLON
    (16) declaration_list -> . single_var_declation COMMA declaration_list
    (17) declaration_list -> . single_var_declation
    (18) single_var_declation -> . IDENTIFIER
    (19) single_var_declation -> . IDENTIFIER OP_assign equality_expression

    IDENTIFIER      shift and go to state 41

    declaration_list               shift and go to state 39
    single_var_declation           shift and go to state 40

state 13

    (21) selection_statement -> KEY_if . LPAREN expression save RPAREN statement
    (22) selection_statement -> KEY_if . LPAREN expression save RPAREN statement KEY_else save statement

    LPAREN          shift and go to state 42


state 14

    (58) id_expression -> LPAREN . expression RPAREN
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    expression                     shift and go to state 43
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 15

    (30) expression_statement -> expression . SEMICOLON
    (32) expression -> expression . COMMA assignment_expression

    SEMICOLON       shift and go to state 44
    COMMA           shift and go to state 45


state 16

    (23) iteration_statement -> KEY_while . label LPAREN expression save RPAREN statement
    (26) label -> . empty
    (59) empty -> .

    LPAREN          reduce using rule 59 (empty -> .)

    label                          shift and go to state 46
    empty                          shift and go to state 47

state 17

    (24) iteration_statement -> KEY_do . label statement KEY_while LPAREN expression RPAREN SEMICOLON
    (26) label -> . empty
    (59) empty -> .

    SEMICOLON       reduce using rule 59 (empty -> .)
    LBRACE          reduce using rule 59 (empty -> .)
    KEY_if          reduce using rule 59 (empty -> .)
    KEY_while       reduce using rule 59 (empty -> .)
    KEY_do          reduce using rule 59 (empty -> .)
    KEY_for         reduce using rule 59 (empty -> .)
    KEY_print       reduce using rule 59 (empty -> .)
    KEY_int         reduce using rule 59 (empty -> .)
    KEY_char        reduce using rule 59 (empty -> .)
    KEY_float       reduce using rule 59 (empty -> .)
    KEY_string      reduce using rule 59 (empty -> .)
    IDENTIFIER      reduce using rule 59 (empty -> .)
    OP_subtract     reduce using rule 59 (empty -> .)
    INTEGER         reduce using rule 59 (empty -> .)
    FLOAT           reduce using rule 59 (empty -> .)
    CHARACTER       reduce using rule 59 (empty -> .)
    STRING          reduce using rule 59 (empty -> .)
    LPAREN          reduce using rule 59 (empty -> .)

    label                          shift and go to state 48
    empty                          shift and go to state 47

state 18

    (25) iteration_statement -> KEY_for . LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement

    LPAREN          shift and go to state 49


state 19

    (20) print_statement -> KEY_print . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 50


state 20

    (12) type_specifier -> KEY_int .

    IDENTIFIER      reduce using rule 12 (type_specifier -> KEY_int .)


state 21

    (13) type_specifier -> KEY_char .

    IDENTIFIER      reduce using rule 13 (type_specifier -> KEY_char .)


state 22

    (14) type_specifier -> KEY_float .

    IDENTIFIER      reduce using rule 14 (type_specifier -> KEY_float .)


state 23

    (15) type_specifier -> KEY_string .

    IDENTIFIER      reduce using rule 15 (type_specifier -> KEY_string .)


state 24

    (31) expression -> assignment_expression .

    SEMICOLON       reduce using rule 31 (expression -> assignment_expression .)
    COMMA           reduce using rule 31 (expression -> assignment_expression .)
    RPAREN          reduce using rule 31 (expression -> assignment_expression .)


state 25

    (33) assignment_expression -> equality_expression .
    (36) equality_expression -> equality_expression . OP_equal relational_expression
    (37) equality_expression -> equality_expression . OP_notequal relational_expression

    SEMICOLON       reduce using rule 33 (assignment_expression -> equality_expression .)
    COMMA           reduce using rule 33 (assignment_expression -> equality_expression .)
    RPAREN          reduce using rule 33 (assignment_expression -> equality_expression .)
    OP_equal        shift and go to state 51
    OP_notequal     shift and go to state 52


state 26

    (34) assignment_expression -> IDENTIFIER . OP_assign equality_expression
    (57) id_expression -> IDENTIFIER .

    OP_assign       shift and go to state 53
    OP_multiply     reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_divide       reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_mod          reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_add          reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_subtract     reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_greater      reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_less         reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_greaterequal reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_lessequal    reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_equal        reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_notequal     reduce using rule 57 (id_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 57 (id_expression -> IDENTIFIER .)
    COMMA           reduce using rule 57 (id_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 57 (id_expression -> IDENTIFIER .)


state 27

    (35) equality_expression -> relational_expression .
    (39) relational_expression -> relational_expression . OP_greater additive_expression
    (40) relational_expression -> relational_expression . OP_less additive_expression
    (41) relational_expression -> relational_expression . OP_greaterequal additive_expression
    (42) relational_expression -> relational_expression . OP_lessequal additive_expression

    OP_equal        reduce using rule 35 (equality_expression -> relational_expression .)
    OP_notequal     reduce using rule 35 (equality_expression -> relational_expression .)
    SEMICOLON       reduce using rule 35 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 35 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 35 (equality_expression -> relational_expression .)
    OP_greater      shift and go to state 54
    OP_less         shift and go to state 55
    OP_greaterequal shift and go to state 56
    OP_lessequal    shift and go to state 57


state 28

    (38) relational_expression -> additive_expression .
    (44) additive_expression -> additive_expression . OP_add multiplicative_expression
    (45) additive_expression -> additive_expression . OP_subtract multiplicative_expression

    OP_greater      reduce using rule 38 (relational_expression -> additive_expression .)
    OP_less         reduce using rule 38 (relational_expression -> additive_expression .)
    OP_greaterequal reduce using rule 38 (relational_expression -> additive_expression .)
    OP_lessequal    reduce using rule 38 (relational_expression -> additive_expression .)
    OP_equal        reduce using rule 38 (relational_expression -> additive_expression .)
    OP_notequal     reduce using rule 38 (relational_expression -> additive_expression .)
    SEMICOLON       reduce using rule 38 (relational_expression -> additive_expression .)
    COMMA           reduce using rule 38 (relational_expression -> additive_expression .)
    RPAREN          reduce using rule 38 (relational_expression -> additive_expression .)
    OP_add          shift and go to state 58
    OP_subtract     shift and go to state 59


state 29

    (43) additive_expression -> multiplicative_expression .
    (47) multiplicative_expression -> multiplicative_expression . OP_multiply unary_expression
    (48) multiplicative_expression -> multiplicative_expression . OP_divide unary_expression
    (49) multiplicative_expression -> multiplicative_expression . OP_mod unary_expression

    OP_add          reduce using rule 43 (additive_expression -> multiplicative_expression .)
    OP_subtract     reduce using rule 43 (additive_expression -> multiplicative_expression .)
    OP_greater      reduce using rule 43 (additive_expression -> multiplicative_expression .)
    OP_less         reduce using rule 43 (additive_expression -> multiplicative_expression .)
    OP_greaterequal reduce using rule 43 (additive_expression -> multiplicative_expression .)
    OP_lessequal    reduce using rule 43 (additive_expression -> multiplicative_expression .)
    OP_equal        reduce using rule 43 (additive_expression -> multiplicative_expression .)
    OP_notequal     reduce using rule 43 (additive_expression -> multiplicative_expression .)
    SEMICOLON       reduce using rule 43 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 43 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 43 (additive_expression -> multiplicative_expression .)
    OP_multiply     shift and go to state 60
    OP_divide       shift and go to state 61
    OP_mod          shift and go to state 62


state 30

    (51) unary_expression -> OP_subtract . primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    primary_expression             shift and go to state 63
    id_expression                  shift and go to state 37

state 31

    (46) multiplicative_expression -> unary_expression .

    OP_multiply     reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_divide       reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_mod          reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_add          reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_subtract     reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_greater      reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_less         reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_greaterequal reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_lessequal    reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_equal        reduce using rule 46 (multiplicative_expression -> unary_expression .)
    OP_notequal     reduce using rule 46 (multiplicative_expression -> unary_expression .)
    SEMICOLON       reduce using rule 46 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 46 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 46 (multiplicative_expression -> unary_expression .)


state 32

    (50) unary_expression -> primary_expression .

    OP_multiply     reduce using rule 50 (unary_expression -> primary_expression .)
    OP_divide       reduce using rule 50 (unary_expression -> primary_expression .)
    OP_mod          reduce using rule 50 (unary_expression -> primary_expression .)
    OP_add          reduce using rule 50 (unary_expression -> primary_expression .)
    OP_subtract     reduce using rule 50 (unary_expression -> primary_expression .)
    OP_greater      reduce using rule 50 (unary_expression -> primary_expression .)
    OP_less         reduce using rule 50 (unary_expression -> primary_expression .)
    OP_greaterequal reduce using rule 50 (unary_expression -> primary_expression .)
    OP_lessequal    reduce using rule 50 (unary_expression -> primary_expression .)
    OP_equal        reduce using rule 50 (unary_expression -> primary_expression .)
    OP_notequal     reduce using rule 50 (unary_expression -> primary_expression .)
    SEMICOLON       reduce using rule 50 (unary_expression -> primary_expression .)
    COMMA           reduce using rule 50 (unary_expression -> primary_expression .)
    RPAREN          reduce using rule 50 (unary_expression -> primary_expression .)


state 33

    (52) primary_expression -> INTEGER .

    OP_multiply     reduce using rule 52 (primary_expression -> INTEGER .)
    OP_divide       reduce using rule 52 (primary_expression -> INTEGER .)
    OP_mod          reduce using rule 52 (primary_expression -> INTEGER .)
    OP_add          reduce using rule 52 (primary_expression -> INTEGER .)
    OP_subtract     reduce using rule 52 (primary_expression -> INTEGER .)
    OP_greater      reduce using rule 52 (primary_expression -> INTEGER .)
    OP_less         reduce using rule 52 (primary_expression -> INTEGER .)
    OP_greaterequal reduce using rule 52 (primary_expression -> INTEGER .)
    OP_lessequal    reduce using rule 52 (primary_expression -> INTEGER .)
    OP_equal        reduce using rule 52 (primary_expression -> INTEGER .)
    OP_notequal     reduce using rule 52 (primary_expression -> INTEGER .)
    SEMICOLON       reduce using rule 52 (primary_expression -> INTEGER .)
    COMMA           reduce using rule 52 (primary_expression -> INTEGER .)
    RPAREN          reduce using rule 52 (primary_expression -> INTEGER .)


state 34

    (53) primary_expression -> FLOAT .

    OP_multiply     reduce using rule 53 (primary_expression -> FLOAT .)
    OP_divide       reduce using rule 53 (primary_expression -> FLOAT .)
    OP_mod          reduce using rule 53 (primary_expression -> FLOAT .)
    OP_add          reduce using rule 53 (primary_expression -> FLOAT .)
    OP_subtract     reduce using rule 53 (primary_expression -> FLOAT .)
    OP_greater      reduce using rule 53 (primary_expression -> FLOAT .)
    OP_less         reduce using rule 53 (primary_expression -> FLOAT .)
    OP_greaterequal reduce using rule 53 (primary_expression -> FLOAT .)
    OP_lessequal    reduce using rule 53 (primary_expression -> FLOAT .)
    OP_equal        reduce using rule 53 (primary_expression -> FLOAT .)
    OP_notequal     reduce using rule 53 (primary_expression -> FLOAT .)
    SEMICOLON       reduce using rule 53 (primary_expression -> FLOAT .)
    COMMA           reduce using rule 53 (primary_expression -> FLOAT .)
    RPAREN          reduce using rule 53 (primary_expression -> FLOAT .)


state 35

    (54) primary_expression -> CHARACTER .

    OP_multiply     reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_divide       reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_mod          reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_add          reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_subtract     reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_greater      reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_less         reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_greaterequal reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_lessequal    reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_equal        reduce using rule 54 (primary_expression -> CHARACTER .)
    OP_notequal     reduce using rule 54 (primary_expression -> CHARACTER .)
    SEMICOLON       reduce using rule 54 (primary_expression -> CHARACTER .)
    COMMA           reduce using rule 54 (primary_expression -> CHARACTER .)
    RPAREN          reduce using rule 54 (primary_expression -> CHARACTER .)


state 36

    (55) primary_expression -> STRING .

    OP_multiply     reduce using rule 55 (primary_expression -> STRING .)
    OP_divide       reduce using rule 55 (primary_expression -> STRING .)
    OP_mod          reduce using rule 55 (primary_expression -> STRING .)
    OP_add          reduce using rule 55 (primary_expression -> STRING .)
    OP_subtract     reduce using rule 55 (primary_expression -> STRING .)
    OP_greater      reduce using rule 55 (primary_expression -> STRING .)
    OP_less         reduce using rule 55 (primary_expression -> STRING .)
    OP_greaterequal reduce using rule 55 (primary_expression -> STRING .)
    OP_lessequal    reduce using rule 55 (primary_expression -> STRING .)
    OP_equal        reduce using rule 55 (primary_expression -> STRING .)
    OP_notequal     reduce using rule 55 (primary_expression -> STRING .)
    SEMICOLON       reduce using rule 55 (primary_expression -> STRING .)
    COMMA           reduce using rule 55 (primary_expression -> STRING .)
    RPAREN          reduce using rule 55 (primary_expression -> STRING .)


state 37

    (56) primary_expression -> id_expression .

    OP_multiply     reduce using rule 56 (primary_expression -> id_expression .)
    OP_divide       reduce using rule 56 (primary_expression -> id_expression .)
    OP_mod          reduce using rule 56 (primary_expression -> id_expression .)
    OP_add          reduce using rule 56 (primary_expression -> id_expression .)
    OP_subtract     reduce using rule 56 (primary_expression -> id_expression .)
    OP_greater      reduce using rule 56 (primary_expression -> id_expression .)
    OP_less         reduce using rule 56 (primary_expression -> id_expression .)
    OP_greaterequal reduce using rule 56 (primary_expression -> id_expression .)
    OP_lessequal    reduce using rule 56 (primary_expression -> id_expression .)
    OP_equal        reduce using rule 56 (primary_expression -> id_expression .)
    OP_notequal     reduce using rule 56 (primary_expression -> id_expression .)
    SEMICOLON       reduce using rule 56 (primary_expression -> id_expression .)
    COMMA           reduce using rule 56 (primary_expression -> id_expression .)
    RPAREN          reduce using rule 56 (primary_expression -> id_expression .)


state 38

    (8) compound_statement -> LBRACE statement_list . RBRACE
    (9) statement_list -> statement_list . statement
    (1) statement -> . compound_statement
    (2) statement -> . declaration_statement
    (3) statement -> . selection_statement
    (4) statement -> . iteration_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . SEMICOLON
    (8) compound_statement -> . LBRACE statement_list RBRACE
    (11) declaration_statement -> . type_specifier declaration_list SEMICOLON
    (21) selection_statement -> . KEY_if LPAREN expression save RPAREN statement
    (22) selection_statement -> . KEY_if LPAREN expression save RPAREN statement KEY_else save statement
    (23) iteration_statement -> . KEY_while label LPAREN expression save RPAREN statement
    (24) iteration_statement -> . KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON
    (25) iteration_statement -> . KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (30) expression_statement -> . expression SEMICOLON
    (20) print_statement -> . KEY_print LPAREN expression RPAREN SEMICOLON
    (12) type_specifier -> . KEY_int
    (13) type_specifier -> . KEY_char
    (14) type_specifier -> . KEY_float
    (15) type_specifier -> . KEY_string
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 65
    SEMICOLON       shift and go to state 10
    LBRACE          shift and go to state 11
    KEY_if          shift and go to state 13
    KEY_while       shift and go to state 16
    KEY_do          shift and go to state 17
    KEY_for         shift and go to state 18
    KEY_print       shift and go to state 19
    KEY_int         shift and go to state 20
    KEY_char        shift and go to state 21
    KEY_float       shift and go to state 22
    KEY_string      shift and go to state 23
    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    statement                      shift and go to state 3
    compound_statement             shift and go to state 4
    declaration_statement          shift and go to state 5
    selection_statement            shift and go to state 6
    iteration_statement            shift and go to state 7
    expression_statement           shift and go to state 8
    print_statement                shift and go to state 9
    type_specifier                 shift and go to state 12
    expression                     shift and go to state 15
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 39

    (11) declaration_statement -> type_specifier declaration_list . SEMICOLON

    SEMICOLON       shift and go to state 66


state 40

    (16) declaration_list -> single_var_declation . COMMA declaration_list
    (17) declaration_list -> single_var_declation .

    COMMA           shift and go to state 67
    SEMICOLON       reduce using rule 17 (declaration_list -> single_var_declation .)


state 41

    (18) single_var_declation -> IDENTIFIER .
    (19) single_var_declation -> IDENTIFIER . OP_assign equality_expression

    COMMA           reduce using rule 18 (single_var_declation -> IDENTIFIER .)
    SEMICOLON       reduce using rule 18 (single_var_declation -> IDENTIFIER .)
    OP_assign       shift and go to state 68


state 42

    (21) selection_statement -> KEY_if LPAREN . expression save RPAREN statement
    (22) selection_statement -> KEY_if LPAREN . expression save RPAREN statement KEY_else save statement
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    expression                     shift and go to state 69
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 43

    (58) id_expression -> LPAREN expression . RPAREN
    (32) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 70
    COMMA           shift and go to state 45


state 44

    (30) expression_statement -> expression SEMICOLON .

    SEMICOLON       reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_if          reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_while       reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_do          reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_for         reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_print       reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_int         reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_char        reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_float       reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_string      reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    OP_subtract     reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    INTEGER         reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    CHARACTER       reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    STRING          reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 30 (expression_statement -> expression SEMICOLON .)
    KEY_else        reduce using rule 30 (expression_statement -> expression SEMICOLON .)


state 45

    (32) expression -> expression COMMA . assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    assignment_expression          shift and go to state 71
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 46

    (23) iteration_statement -> KEY_while label . LPAREN expression save RPAREN statement

    LPAREN          shift and go to state 72


state 47

    (26) label -> empty .

    LPAREN          reduce using rule 26 (label -> empty .)
    SEMICOLON       reduce using rule 26 (label -> empty .)
    LBRACE          reduce using rule 26 (label -> empty .)
    KEY_if          reduce using rule 26 (label -> empty .)
    KEY_while       reduce using rule 26 (label -> empty .)
    KEY_do          reduce using rule 26 (label -> empty .)
    KEY_for         reduce using rule 26 (label -> empty .)
    KEY_print       reduce using rule 26 (label -> empty .)
    KEY_int         reduce using rule 26 (label -> empty .)
    KEY_char        reduce using rule 26 (label -> empty .)
    KEY_float       reduce using rule 26 (label -> empty .)
    KEY_string      reduce using rule 26 (label -> empty .)
    IDENTIFIER      reduce using rule 26 (label -> empty .)
    OP_subtract     reduce using rule 26 (label -> empty .)
    INTEGER         reduce using rule 26 (label -> empty .)
    FLOAT           reduce using rule 26 (label -> empty .)
    CHARACTER       reduce using rule 26 (label -> empty .)
    STRING          reduce using rule 26 (label -> empty .)


state 48

    (24) iteration_statement -> KEY_do label . statement KEY_while LPAREN expression RPAREN SEMICOLON
    (1) statement -> . compound_statement
    (2) statement -> . declaration_statement
    (3) statement -> . selection_statement
    (4) statement -> . iteration_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . SEMICOLON
    (8) compound_statement -> . LBRACE statement_list RBRACE
    (11) declaration_statement -> . type_specifier declaration_list SEMICOLON
    (21) selection_statement -> . KEY_if LPAREN expression save RPAREN statement
    (22) selection_statement -> . KEY_if LPAREN expression save RPAREN statement KEY_else save statement
    (23) iteration_statement -> . KEY_while label LPAREN expression save RPAREN statement
    (24) iteration_statement -> . KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON
    (25) iteration_statement -> . KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (30) expression_statement -> . expression SEMICOLON
    (20) print_statement -> . KEY_print LPAREN expression RPAREN SEMICOLON
    (12) type_specifier -> . KEY_int
    (13) type_specifier -> . KEY_char
    (14) type_specifier -> . KEY_float
    (15) type_specifier -> . KEY_string
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    SEMICOLON       shift and go to state 10
    LBRACE          shift and go to state 11
    KEY_if          shift and go to state 13
    KEY_while       shift and go to state 16
    KEY_do          shift and go to state 17
    KEY_for         shift and go to state 18
    KEY_print       shift and go to state 19
    KEY_int         shift and go to state 20
    KEY_char        shift and go to state 21
    KEY_float       shift and go to state 22
    KEY_string      shift and go to state 23
    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    statement                      shift and go to state 73
    expression                     shift and go to state 15
    compound_statement             shift and go to state 4
    declaration_statement          shift and go to state 5
    selection_statement            shift and go to state 6
    iteration_statement            shift and go to state 7
    expression_statement           shift and go to state 8
    print_statement                shift and go to state 9
    type_specifier                 shift and go to state 12
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 49

    (25) iteration_statement -> KEY_for LPAREN . optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (28) optexpr -> . assignment_expression
    (29) optexpr -> . empty
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (59) empty -> .
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    SEMICOLON       reduce using rule 59 (empty -> .)
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    optexpr                        shift and go to state 74
    assignment_expression          shift and go to state 75
    empty                          shift and go to state 76
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 50

    (20) print_statement -> KEY_print LPAREN . expression RPAREN SEMICOLON
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    expression                     shift and go to state 77
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 51

    (36) equality_expression -> equality_expression OP_equal . relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    relational_expression          shift and go to state 78
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 52

    (37) equality_expression -> equality_expression OP_notequal . relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    relational_expression          shift and go to state 79
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 53

    (34) assignment_expression -> IDENTIFIER OP_assign . equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    equality_expression            shift and go to state 80
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 54

    (39) relational_expression -> relational_expression OP_greater . additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    additive_expression            shift and go to state 81
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 55

    (40) relational_expression -> relational_expression OP_less . additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    additive_expression            shift and go to state 82
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 56

    (41) relational_expression -> relational_expression OP_greaterequal . additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    additive_expression            shift and go to state 83
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 57

    (42) relational_expression -> relational_expression OP_lessequal . additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    additive_expression            shift and go to state 84
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 58

    (44) additive_expression -> additive_expression OP_add . multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    multiplicative_expression      shift and go to state 85
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 59

    (45) additive_expression -> additive_expression OP_subtract . multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    multiplicative_expression      shift and go to state 86
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 60

    (47) multiplicative_expression -> multiplicative_expression OP_multiply . unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    unary_expression               shift and go to state 87
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 61

    (48) multiplicative_expression -> multiplicative_expression OP_divide . unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    unary_expression               shift and go to state 88
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 62

    (49) multiplicative_expression -> multiplicative_expression OP_mod . unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    unary_expression               shift and go to state 89
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 63

    (51) unary_expression -> OP_subtract primary_expression .

    OP_multiply     reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_divide       reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_mod          reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_add          reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_subtract     reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_greater      reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_less         reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_greaterequal reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_lessequal    reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_equal        reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    OP_notequal     reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    SEMICOLON       reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    COMMA           reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)
    RPAREN          reduce using rule 51 (unary_expression -> OP_subtract primary_expression .)


state 64

    (57) id_expression -> IDENTIFIER .

    OP_multiply     reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_divide       reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_mod          reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_add          reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_subtract     reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_greater      reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_less         reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_greaterequal reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_lessequal    reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_equal        reduce using rule 57 (id_expression -> IDENTIFIER .)
    OP_notequal     reduce using rule 57 (id_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 57 (id_expression -> IDENTIFIER .)
    COMMA           reduce using rule 57 (id_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 57 (id_expression -> IDENTIFIER .)


state 65

    (8) compound_statement -> LBRACE statement_list RBRACE .

    SEMICOLON       reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_if          reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_while       reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_do          reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_for         reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_print       reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_int         reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_char        reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_float       reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_string      reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    OP_subtract     reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    INTEGER         reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    CHARACTER       reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)
    KEY_else        reduce using rule 8 (compound_statement -> LBRACE statement_list RBRACE .)


state 66

    (11) declaration_statement -> type_specifier declaration_list SEMICOLON .

    SEMICOLON       reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    LBRACE          reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_if          reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_while       reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_do          reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_for         reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_print       reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_int         reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_char        reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_float       reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_string      reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    OP_subtract     reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    INTEGER         reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    FLOAT           reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    CHARACTER       reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    STRING          reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    LPAREN          reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    $end            reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    RBRACE          reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)
    KEY_else        reduce using rule 11 (declaration_statement -> type_specifier declaration_list SEMICOLON .)


state 67

    (16) declaration_list -> single_var_declation COMMA . declaration_list
    (16) declaration_list -> . single_var_declation COMMA declaration_list
    (17) declaration_list -> . single_var_declation
    (18) single_var_declation -> . IDENTIFIER
    (19) single_var_declation -> . IDENTIFIER OP_assign equality_expression

    IDENTIFIER      shift and go to state 41

    single_var_declation           shift and go to state 40
    declaration_list               shift and go to state 90

state 68

    (19) single_var_declation -> IDENTIFIER OP_assign . equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    IDENTIFIER      shift and go to state 64
    LPAREN          shift and go to state 14

    equality_expression            shift and go to state 91
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 69

    (21) selection_statement -> KEY_if LPAREN expression . save RPAREN statement
    (22) selection_statement -> KEY_if LPAREN expression . save RPAREN statement KEY_else save statement
    (32) expression -> expression . COMMA assignment_expression
    (27) save -> . empty
    (59) empty -> .

    COMMA           shift and go to state 45
    RPAREN          reduce using rule 59 (empty -> .)

    save                           shift and go to state 92
    empty                          shift and go to state 93

state 70

    (58) id_expression -> LPAREN expression RPAREN .

    OP_multiply     reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_divide       reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_mod          reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_add          reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_subtract     reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_greater      reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_less         reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_greaterequal reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_lessequal    reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_equal        reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    OP_notequal     reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 58 (id_expression -> LPAREN expression RPAREN .)


state 71

    (32) expression -> expression COMMA assignment_expression .

    SEMICOLON       reduce using rule 32 (expression -> expression COMMA assignment_expression .)
    COMMA           reduce using rule 32 (expression -> expression COMMA assignment_expression .)
    RPAREN          reduce using rule 32 (expression -> expression COMMA assignment_expression .)


state 72

    (23) iteration_statement -> KEY_while label LPAREN . expression save RPAREN statement
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    expression                     shift and go to state 94
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 73

    (24) iteration_statement -> KEY_do label statement . KEY_while LPAREN expression RPAREN SEMICOLON

    KEY_while       shift and go to state 95


state 74

    (25) iteration_statement -> KEY_for LPAREN optexpr . label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (26) label -> . empty
    (59) empty -> .

    SEMICOLON       reduce using rule 59 (empty -> .)

    label                          shift and go to state 96
    empty                          shift and go to state 47

state 75

    (28) optexpr -> assignment_expression .

    SEMICOLON       reduce using rule 28 (optexpr -> assignment_expression .)
    RPAREN          reduce using rule 28 (optexpr -> assignment_expression .)


state 76

    (29) optexpr -> empty .

    SEMICOLON       reduce using rule 29 (optexpr -> empty .)
    RPAREN          reduce using rule 29 (optexpr -> empty .)


state 77

    (20) print_statement -> KEY_print LPAREN expression . RPAREN SEMICOLON
    (32) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 97
    COMMA           shift and go to state 45


state 78

    (36) equality_expression -> equality_expression OP_equal relational_expression .
    (39) relational_expression -> relational_expression . OP_greater additive_expression
    (40) relational_expression -> relational_expression . OP_less additive_expression
    (41) relational_expression -> relational_expression . OP_greaterequal additive_expression
    (42) relational_expression -> relational_expression . OP_lessequal additive_expression

    OP_equal        reduce using rule 36 (equality_expression -> equality_expression OP_equal relational_expression .)
    OP_notequal     reduce using rule 36 (equality_expression -> equality_expression OP_equal relational_expression .)
    SEMICOLON       reduce using rule 36 (equality_expression -> equality_expression OP_equal relational_expression .)
    COMMA           reduce using rule 36 (equality_expression -> equality_expression OP_equal relational_expression .)
    RPAREN          reduce using rule 36 (equality_expression -> equality_expression OP_equal relational_expression .)
    OP_greater      shift and go to state 54
    OP_less         shift and go to state 55
    OP_greaterequal shift and go to state 56
    OP_lessequal    shift and go to state 57


state 79

    (37) equality_expression -> equality_expression OP_notequal relational_expression .
    (39) relational_expression -> relational_expression . OP_greater additive_expression
    (40) relational_expression -> relational_expression . OP_less additive_expression
    (41) relational_expression -> relational_expression . OP_greaterequal additive_expression
    (42) relational_expression -> relational_expression . OP_lessequal additive_expression

    OP_equal        reduce using rule 37 (equality_expression -> equality_expression OP_notequal relational_expression .)
    OP_notequal     reduce using rule 37 (equality_expression -> equality_expression OP_notequal relational_expression .)
    SEMICOLON       reduce using rule 37 (equality_expression -> equality_expression OP_notequal relational_expression .)
    COMMA           reduce using rule 37 (equality_expression -> equality_expression OP_notequal relational_expression .)
    RPAREN          reduce using rule 37 (equality_expression -> equality_expression OP_notequal relational_expression .)
    OP_greater      shift and go to state 54
    OP_less         shift and go to state 55
    OP_greaterequal shift and go to state 56
    OP_lessequal    shift and go to state 57


state 80

    (34) assignment_expression -> IDENTIFIER OP_assign equality_expression .
    (36) equality_expression -> equality_expression . OP_equal relational_expression
    (37) equality_expression -> equality_expression . OP_notequal relational_expression

    SEMICOLON       reduce using rule 34 (assignment_expression -> IDENTIFIER OP_assign equality_expression .)
    COMMA           reduce using rule 34 (assignment_expression -> IDENTIFIER OP_assign equality_expression .)
    RPAREN          reduce using rule 34 (assignment_expression -> IDENTIFIER OP_assign equality_expression .)
    OP_equal        shift and go to state 51
    OP_notequal     shift and go to state 52


state 81

    (39) relational_expression -> relational_expression OP_greater additive_expression .
    (44) additive_expression -> additive_expression . OP_add multiplicative_expression
    (45) additive_expression -> additive_expression . OP_subtract multiplicative_expression

    OP_greater      reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    OP_less         reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    OP_greaterequal reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    OP_lessequal    reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    OP_equal        reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    OP_notequal     reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    SEMICOLON       reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    COMMA           reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    RPAREN          reduce using rule 39 (relational_expression -> relational_expression OP_greater additive_expression .)
    OP_add          shift and go to state 58
    OP_subtract     shift and go to state 59


state 82

    (40) relational_expression -> relational_expression OP_less additive_expression .
    (44) additive_expression -> additive_expression . OP_add multiplicative_expression
    (45) additive_expression -> additive_expression . OP_subtract multiplicative_expression

    OP_greater      reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    OP_less         reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    OP_greaterequal reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    OP_lessequal    reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    OP_equal        reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    OP_notequal     reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    SEMICOLON       reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    COMMA           reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    RPAREN          reduce using rule 40 (relational_expression -> relational_expression OP_less additive_expression .)
    OP_add          shift and go to state 58
    OP_subtract     shift and go to state 59


state 83

    (41) relational_expression -> relational_expression OP_greaterequal additive_expression .
    (44) additive_expression -> additive_expression . OP_add multiplicative_expression
    (45) additive_expression -> additive_expression . OP_subtract multiplicative_expression

    OP_greater      reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    OP_less         reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    OP_greaterequal reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    OP_lessequal    reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    OP_equal        reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    OP_notequal     reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    SEMICOLON       reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    COMMA           reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    RPAREN          reduce using rule 41 (relational_expression -> relational_expression OP_greaterequal additive_expression .)
    OP_add          shift and go to state 58
    OP_subtract     shift and go to state 59


state 84

    (42) relational_expression -> relational_expression OP_lessequal additive_expression .
    (44) additive_expression -> additive_expression . OP_add multiplicative_expression
    (45) additive_expression -> additive_expression . OP_subtract multiplicative_expression

    OP_greater      reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    OP_less         reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    OP_greaterequal reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    OP_lessequal    reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    OP_equal        reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    OP_notequal     reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    SEMICOLON       reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    COMMA           reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    RPAREN          reduce using rule 42 (relational_expression -> relational_expression OP_lessequal additive_expression .)
    OP_add          shift and go to state 58
    OP_subtract     shift and go to state 59


state 85

    (44) additive_expression -> additive_expression OP_add multiplicative_expression .
    (47) multiplicative_expression -> multiplicative_expression . OP_multiply unary_expression
    (48) multiplicative_expression -> multiplicative_expression . OP_divide unary_expression
    (49) multiplicative_expression -> multiplicative_expression . OP_mod unary_expression

    OP_add          reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    OP_subtract     reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    OP_greater      reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    OP_less         reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    OP_greaterequal reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    OP_lessequal    reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    OP_equal        reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    OP_notequal     reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    SEMICOLON       reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    COMMA           reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    RPAREN          reduce using rule 44 (additive_expression -> additive_expression OP_add multiplicative_expression .)
    OP_multiply     shift and go to state 60
    OP_divide       shift and go to state 61
    OP_mod          shift and go to state 62


state 86

    (45) additive_expression -> additive_expression OP_subtract multiplicative_expression .
    (47) multiplicative_expression -> multiplicative_expression . OP_multiply unary_expression
    (48) multiplicative_expression -> multiplicative_expression . OP_divide unary_expression
    (49) multiplicative_expression -> multiplicative_expression . OP_mod unary_expression

    OP_add          reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    OP_subtract     reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    OP_greater      reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    OP_less         reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    OP_greaterequal reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    OP_lessequal    reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    OP_equal        reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    OP_notequal     reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    SEMICOLON       reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    COMMA           reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    RPAREN          reduce using rule 45 (additive_expression -> additive_expression OP_subtract multiplicative_expression .)
    OP_multiply     shift and go to state 60
    OP_divide       shift and go to state 61
    OP_mod          shift and go to state 62


state 87

    (47) multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .

    OP_multiply     reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_divide       reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_mod          reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_add          reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_subtract     reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_greater      reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_less         reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_greaterequal reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_lessequal    reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_equal        reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    OP_notequal     reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    SEMICOLON       reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    COMMA           reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)
    RPAREN          reduce using rule 47 (multiplicative_expression -> multiplicative_expression OP_multiply unary_expression .)


state 88

    (48) multiplicative_expression -> multiplicative_expression OP_divide unary_expression .

    OP_multiply     reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_divide       reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_mod          reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_add          reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_subtract     reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_greater      reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_less         reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_greaterequal reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_lessequal    reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_equal        reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    OP_notequal     reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    SEMICOLON       reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    COMMA           reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)
    RPAREN          reduce using rule 48 (multiplicative_expression -> multiplicative_expression OP_divide unary_expression .)


state 89

    (49) multiplicative_expression -> multiplicative_expression OP_mod unary_expression .

    OP_multiply     reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_divide       reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_mod          reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_add          reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_subtract     reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_greater      reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_less         reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_greaterequal reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_lessequal    reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_equal        reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    OP_notequal     reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    SEMICOLON       reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    COMMA           reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)
    RPAREN          reduce using rule 49 (multiplicative_expression -> multiplicative_expression OP_mod unary_expression .)


state 90

    (16) declaration_list -> single_var_declation COMMA declaration_list .

    SEMICOLON       reduce using rule 16 (declaration_list -> single_var_declation COMMA declaration_list .)


state 91

    (19) single_var_declation -> IDENTIFIER OP_assign equality_expression .
    (36) equality_expression -> equality_expression . OP_equal relational_expression
    (37) equality_expression -> equality_expression . OP_notequal relational_expression

    COMMA           reduce using rule 19 (single_var_declation -> IDENTIFIER OP_assign equality_expression .)
    SEMICOLON       reduce using rule 19 (single_var_declation -> IDENTIFIER OP_assign equality_expression .)
    OP_equal        shift and go to state 51
    OP_notequal     shift and go to state 52


state 92

    (21) selection_statement -> KEY_if LPAREN expression save . RPAREN statement
    (22) selection_statement -> KEY_if LPAREN expression save . RPAREN statement KEY_else save statement

    RPAREN          shift and go to state 98


state 93

    (27) save -> empty .

    RPAREN          reduce using rule 27 (save -> empty .)
    SEMICOLON       reduce using rule 27 (save -> empty .)
    LBRACE          reduce using rule 27 (save -> empty .)
    KEY_if          reduce using rule 27 (save -> empty .)
    KEY_while       reduce using rule 27 (save -> empty .)
    KEY_do          reduce using rule 27 (save -> empty .)
    KEY_for         reduce using rule 27 (save -> empty .)
    KEY_print       reduce using rule 27 (save -> empty .)
    KEY_int         reduce using rule 27 (save -> empty .)
    KEY_char        reduce using rule 27 (save -> empty .)
    KEY_float       reduce using rule 27 (save -> empty .)
    KEY_string      reduce using rule 27 (save -> empty .)
    IDENTIFIER      reduce using rule 27 (save -> empty .)
    OP_subtract     reduce using rule 27 (save -> empty .)
    INTEGER         reduce using rule 27 (save -> empty .)
    FLOAT           reduce using rule 27 (save -> empty .)
    CHARACTER       reduce using rule 27 (save -> empty .)
    STRING          reduce using rule 27 (save -> empty .)
    LPAREN          reduce using rule 27 (save -> empty .)


state 94

    (23) iteration_statement -> KEY_while label LPAREN expression . save RPAREN statement
    (32) expression -> expression . COMMA assignment_expression
    (27) save -> . empty
    (59) empty -> .

    COMMA           shift and go to state 45
    RPAREN          reduce using rule 59 (empty -> .)

    save                           shift and go to state 99
    empty                          shift and go to state 93

state 95

    (24) iteration_statement -> KEY_do label statement KEY_while . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 100


state 96

    (25) iteration_statement -> KEY_for LPAREN optexpr label . SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement

    SEMICOLON       shift and go to state 101


state 97

    (20) print_statement -> KEY_print LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 102


state 98

    (21) selection_statement -> KEY_if LPAREN expression save RPAREN . statement
    (22) selection_statement -> KEY_if LPAREN expression save RPAREN . statement KEY_else save statement
    (1) statement -> . compound_statement
    (2) statement -> . declaration_statement
    (3) statement -> . selection_statement
    (4) statement -> . iteration_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . SEMICOLON
    (8) compound_statement -> . LBRACE statement_list RBRACE
    (11) declaration_statement -> . type_specifier declaration_list SEMICOLON
    (21) selection_statement -> . KEY_if LPAREN expression save RPAREN statement
    (22) selection_statement -> . KEY_if LPAREN expression save RPAREN statement KEY_else save statement
    (23) iteration_statement -> . KEY_while label LPAREN expression save RPAREN statement
    (24) iteration_statement -> . KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON
    (25) iteration_statement -> . KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (30) expression_statement -> . expression SEMICOLON
    (20) print_statement -> . KEY_print LPAREN expression RPAREN SEMICOLON
    (12) type_specifier -> . KEY_int
    (13) type_specifier -> . KEY_char
    (14) type_specifier -> . KEY_float
    (15) type_specifier -> . KEY_string
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    SEMICOLON       shift and go to state 10
    LBRACE          shift and go to state 11
    KEY_if          shift and go to state 13
    KEY_while       shift and go to state 16
    KEY_do          shift and go to state 17
    KEY_for         shift and go to state 18
    KEY_print       shift and go to state 19
    KEY_int         shift and go to state 20
    KEY_char        shift and go to state 21
    KEY_float       shift and go to state 22
    KEY_string      shift and go to state 23
    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    expression                     shift and go to state 15
    statement                      shift and go to state 103
    compound_statement             shift and go to state 4
    declaration_statement          shift and go to state 5
    selection_statement            shift and go to state 6
    iteration_statement            shift and go to state 7
    expression_statement           shift and go to state 8
    print_statement                shift and go to state 9
    type_specifier                 shift and go to state 12
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 99

    (23) iteration_statement -> KEY_while label LPAREN expression save . RPAREN statement

    RPAREN          shift and go to state 104


state 100

    (24) iteration_statement -> KEY_do label statement KEY_while LPAREN . expression RPAREN SEMICOLON
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    expression                     shift and go to state 105
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 101

    (25) iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON . optexpr save SEMICOLON optexpr RPAREN statement
    (28) optexpr -> . assignment_expression
    (29) optexpr -> . empty
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (59) empty -> .
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    SEMICOLON       reduce using rule 59 (empty -> .)
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    optexpr                        shift and go to state 106
    assignment_expression          shift and go to state 75
    empty                          shift and go to state 76
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 102

    (20) print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_if          reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_while       reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_do          reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_for         reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_print       reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_int         reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_char        reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_float       reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_string      reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    OP_subtract     reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    CHARACTER       reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)
    KEY_else        reduce using rule 20 (print_statement -> KEY_print LPAREN expression RPAREN SEMICOLON .)


state 103

    (21) selection_statement -> KEY_if LPAREN expression save RPAREN statement .
    (22) selection_statement -> KEY_if LPAREN expression save RPAREN statement . KEY_else save statement

  ! shift/reduce conflict for KEY_else resolved as shift
    SEMICOLON       reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    LBRACE          reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_if          reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_while       reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_do          reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_for         reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_print       reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_int         reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_char        reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_float       reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_string      reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    IDENTIFIER      reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    OP_subtract     reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    INTEGER         reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    FLOAT           reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    CHARACTER       reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    STRING          reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    LPAREN          reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    $end            reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    RBRACE          reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .)
    KEY_else        shift and go to state 107

  ! KEY_else        [ reduce using rule 21 (selection_statement -> KEY_if LPAREN expression save RPAREN statement .) ]


state 104

    (23) iteration_statement -> KEY_while label LPAREN expression save RPAREN . statement
    (1) statement -> . compound_statement
    (2) statement -> . declaration_statement
    (3) statement -> . selection_statement
    (4) statement -> . iteration_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . SEMICOLON
    (8) compound_statement -> . LBRACE statement_list RBRACE
    (11) declaration_statement -> . type_specifier declaration_list SEMICOLON
    (21) selection_statement -> . KEY_if LPAREN expression save RPAREN statement
    (22) selection_statement -> . KEY_if LPAREN expression save RPAREN statement KEY_else save statement
    (23) iteration_statement -> . KEY_while label LPAREN expression save RPAREN statement
    (24) iteration_statement -> . KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON
    (25) iteration_statement -> . KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (30) expression_statement -> . expression SEMICOLON
    (20) print_statement -> . KEY_print LPAREN expression RPAREN SEMICOLON
    (12) type_specifier -> . KEY_int
    (13) type_specifier -> . KEY_char
    (14) type_specifier -> . KEY_float
    (15) type_specifier -> . KEY_string
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    SEMICOLON       shift and go to state 10
    LBRACE          shift and go to state 11
    KEY_if          shift and go to state 13
    KEY_while       shift and go to state 16
    KEY_do          shift and go to state 17
    KEY_for         shift and go to state 18
    KEY_print       shift and go to state 19
    KEY_int         shift and go to state 20
    KEY_char        shift and go to state 21
    KEY_float       shift and go to state 22
    KEY_string      shift and go to state 23
    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    expression                     shift and go to state 15
    statement                      shift and go to state 108
    compound_statement             shift and go to state 4
    declaration_statement          shift and go to state 5
    selection_statement            shift and go to state 6
    iteration_statement            shift and go to state 7
    expression_statement           shift and go to state 8
    print_statement                shift and go to state 9
    type_specifier                 shift and go to state 12
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 105

    (24) iteration_statement -> KEY_do label statement KEY_while LPAREN expression . RPAREN SEMICOLON
    (32) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 45


state 106

    (25) iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr . save SEMICOLON optexpr RPAREN statement
    (27) save -> . empty
    (59) empty -> .

    SEMICOLON       reduce using rule 59 (empty -> .)

    save                           shift and go to state 110
    empty                          shift and go to state 93

state 107

    (22) selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else . save statement
    (27) save -> . empty
    (59) empty -> .

    SEMICOLON       reduce using rule 59 (empty -> .)
    LBRACE          reduce using rule 59 (empty -> .)
    KEY_if          reduce using rule 59 (empty -> .)
    KEY_while       reduce using rule 59 (empty -> .)
    KEY_do          reduce using rule 59 (empty -> .)
    KEY_for         reduce using rule 59 (empty -> .)
    KEY_print       reduce using rule 59 (empty -> .)
    KEY_int         reduce using rule 59 (empty -> .)
    KEY_char        reduce using rule 59 (empty -> .)
    KEY_float       reduce using rule 59 (empty -> .)
    KEY_string      reduce using rule 59 (empty -> .)
    IDENTIFIER      reduce using rule 59 (empty -> .)
    OP_subtract     reduce using rule 59 (empty -> .)
    INTEGER         reduce using rule 59 (empty -> .)
    FLOAT           reduce using rule 59 (empty -> .)
    CHARACTER       reduce using rule 59 (empty -> .)
    STRING          reduce using rule 59 (empty -> .)
    LPAREN          reduce using rule 59 (empty -> .)

    save                           shift and go to state 111
    empty                          shift and go to state 93

state 108

    (23) iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .

    SEMICOLON       reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    LBRACE          reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_if          reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_while       reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_do          reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_for         reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_print       reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_int         reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_char        reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_float       reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_string      reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    IDENTIFIER      reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    OP_subtract     reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    INTEGER         reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    FLOAT           reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    CHARACTER       reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    STRING          reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    LPAREN          reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    $end            reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    RBRACE          reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)
    KEY_else        reduce using rule 23 (iteration_statement -> KEY_while label LPAREN expression save RPAREN statement .)


state 109

    (24) iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 112


state 110

    (25) iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save . SEMICOLON optexpr RPAREN statement

    SEMICOLON       shift and go to state 113


state 111

    (22) selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save . statement
    (1) statement -> . compound_statement
    (2) statement -> . declaration_statement
    (3) statement -> . selection_statement
    (4) statement -> . iteration_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . SEMICOLON
    (8) compound_statement -> . LBRACE statement_list RBRACE
    (11) declaration_statement -> . type_specifier declaration_list SEMICOLON
    (21) selection_statement -> . KEY_if LPAREN expression save RPAREN statement
    (22) selection_statement -> . KEY_if LPAREN expression save RPAREN statement KEY_else save statement
    (23) iteration_statement -> . KEY_while label LPAREN expression save RPAREN statement
    (24) iteration_statement -> . KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON
    (25) iteration_statement -> . KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (30) expression_statement -> . expression SEMICOLON
    (20) print_statement -> . KEY_print LPAREN expression RPAREN SEMICOLON
    (12) type_specifier -> . KEY_int
    (13) type_specifier -> . KEY_char
    (14) type_specifier -> . KEY_float
    (15) type_specifier -> . KEY_string
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    SEMICOLON       shift and go to state 10
    LBRACE          shift and go to state 11
    KEY_if          shift and go to state 13
    KEY_while       shift and go to state 16
    KEY_do          shift and go to state 17
    KEY_for         shift and go to state 18
    KEY_print       shift and go to state 19
    KEY_int         shift and go to state 20
    KEY_char        shift and go to state 21
    KEY_float       shift and go to state 22
    KEY_string      shift and go to state 23
    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    expression                     shift and go to state 15
    statement                      shift and go to state 114
    compound_statement             shift and go to state 4
    declaration_statement          shift and go to state 5
    selection_statement            shift and go to state 6
    iteration_statement            shift and go to state 7
    expression_statement           shift and go to state 8
    print_statement                shift and go to state 9
    type_specifier                 shift and go to state 12
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 112

    (24) iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_if          reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_while       reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_do          reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_for         reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_print       reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_int         reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_char        reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_float       reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_string      reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    OP_subtract     reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    CHARACTER       reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)
    KEY_else        reduce using rule 24 (iteration_statement -> KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON .)


state 113

    (25) iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON . optexpr RPAREN statement
    (28) optexpr -> . assignment_expression
    (29) optexpr -> . empty
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (59) empty -> .
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    IDENTIFIER      shift and go to state 26
    RPAREN          reduce using rule 59 (empty -> .)
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    optexpr                        shift and go to state 115
    assignment_expression          shift and go to state 75
    empty                          shift and go to state 76
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 114

    (22) selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .

    SEMICOLON       reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    LBRACE          reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_if          reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_while       reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_do          reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_for         reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_print       reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_int         reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_char        reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_float       reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_string      reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    IDENTIFIER      reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    OP_subtract     reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    INTEGER         reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    FLOAT           reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    CHARACTER       reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    STRING          reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    LPAREN          reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    $end            reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    RBRACE          reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)
    KEY_else        reduce using rule 22 (selection_statement -> KEY_if LPAREN expression save RPAREN statement KEY_else save statement .)


state 115

    (25) iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr . RPAREN statement

    RPAREN          shift and go to state 116


state 116

    (25) iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN . statement
    (1) statement -> . compound_statement
    (2) statement -> . declaration_statement
    (3) statement -> . selection_statement
    (4) statement -> . iteration_statement
    (5) statement -> . expression_statement
    (6) statement -> . print_statement
    (7) statement -> . SEMICOLON
    (8) compound_statement -> . LBRACE statement_list RBRACE
    (11) declaration_statement -> . type_specifier declaration_list SEMICOLON
    (21) selection_statement -> . KEY_if LPAREN expression save RPAREN statement
    (22) selection_statement -> . KEY_if LPAREN expression save RPAREN statement KEY_else save statement
    (23) iteration_statement -> . KEY_while label LPAREN expression save RPAREN statement
    (24) iteration_statement -> . KEY_do label statement KEY_while LPAREN expression RPAREN SEMICOLON
    (25) iteration_statement -> . KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement
    (30) expression_statement -> . expression SEMICOLON
    (20) print_statement -> . KEY_print LPAREN expression RPAREN SEMICOLON
    (12) type_specifier -> . KEY_int
    (13) type_specifier -> . KEY_char
    (14) type_specifier -> . KEY_float
    (15) type_specifier -> . KEY_string
    (31) expression -> . assignment_expression
    (32) expression -> . expression COMMA assignment_expression
    (33) assignment_expression -> . equality_expression
    (34) assignment_expression -> . IDENTIFIER OP_assign equality_expression
    (35) equality_expression -> . relational_expression
    (36) equality_expression -> . equality_expression OP_equal relational_expression
    (37) equality_expression -> . equality_expression OP_notequal relational_expression
    (38) relational_expression -> . additive_expression
    (39) relational_expression -> . relational_expression OP_greater additive_expression
    (40) relational_expression -> . relational_expression OP_less additive_expression
    (41) relational_expression -> . relational_expression OP_greaterequal additive_expression
    (42) relational_expression -> . relational_expression OP_lessequal additive_expression
    (43) additive_expression -> . multiplicative_expression
    (44) additive_expression -> . additive_expression OP_add multiplicative_expression
    (45) additive_expression -> . additive_expression OP_subtract multiplicative_expression
    (46) multiplicative_expression -> . unary_expression
    (47) multiplicative_expression -> . multiplicative_expression OP_multiply unary_expression
    (48) multiplicative_expression -> . multiplicative_expression OP_divide unary_expression
    (49) multiplicative_expression -> . multiplicative_expression OP_mod unary_expression
    (50) unary_expression -> . primary_expression
    (51) unary_expression -> . OP_subtract primary_expression
    (52) primary_expression -> . INTEGER
    (53) primary_expression -> . FLOAT
    (54) primary_expression -> . CHARACTER
    (55) primary_expression -> . STRING
    (56) primary_expression -> . id_expression
    (57) id_expression -> . IDENTIFIER
    (58) id_expression -> . LPAREN expression RPAREN

    SEMICOLON       shift and go to state 10
    LBRACE          shift and go to state 11
    KEY_if          shift and go to state 13
    KEY_while       shift and go to state 16
    KEY_do          shift and go to state 17
    KEY_for         shift and go to state 18
    KEY_print       shift and go to state 19
    KEY_int         shift and go to state 20
    KEY_char        shift and go to state 21
    KEY_float       shift and go to state 22
    KEY_string      shift and go to state 23
    IDENTIFIER      shift and go to state 26
    OP_subtract     shift and go to state 30
    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHARACTER       shift and go to state 35
    STRING          shift and go to state 36
    LPAREN          shift and go to state 14

    statement                      shift and go to state 117
    compound_statement             shift and go to state 4
    declaration_statement          shift and go to state 5
    selection_statement            shift and go to state 6
    iteration_statement            shift and go to state 7
    expression_statement           shift and go to state 8
    print_statement                shift and go to state 9
    type_specifier                 shift and go to state 12
    expression                     shift and go to state 15
    assignment_expression          shift and go to state 24
    equality_expression            shift and go to state 25
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28
    multiplicative_expression      shift and go to state 29
    unary_expression               shift and go to state 31
    primary_expression             shift and go to state 32
    id_expression                  shift and go to state 37

state 117

    (25) iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .

    SEMICOLON       reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    LBRACE          reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_if          reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_while       reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_do          reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_for         reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_print       reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_int         reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_char        reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_float       reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_string      reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    IDENTIFIER      reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    OP_subtract     reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    INTEGER         reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    FLOAT           reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    CHARACTER       reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    STRING          reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    LPAREN          reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    $end            reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    RBRACE          reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)
    KEY_else        reduce using rule 25 (iteration_statement -> KEY_for LPAREN optexpr label SEMICOLON optexpr save SEMICOLON optexpr RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KEY_else in state 103 resolved as shift
